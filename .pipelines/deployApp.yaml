pool:
  vmImage: ubuntu-latest

variables:
  azureSubscriptionEndpoint: AzureRM
  WebAppName: app-service-73638
  pythonVersion: "3.9.10"

steps:
# - task: "AzureRMWebAppDeployment@4"
#   displayName: Azure App Service Deploy
#   inputs:
#     WebAppKind: webAppLinux
#     ConnectedServiceName: $(azureSubscriptionEndpoint)
#     WebAppName: $(WebAppName)
#     Package: $(Build.SourcesDirectory)\.appServicePython\

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'ls ''$(Build.SourcesDirectory)'''
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'tree'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
    displayName: 'Use Python $(pythonVersion)'
- script: |
    ls
    pwd
    echo ${projectRoot}
    python -m venv antenv
    source antenv/bin/activate
    python -m pip install --upgrade pip
    pip install setup
    pip install -r requirements.txt
  workingDirectory: 'appServicePython'
  displayName: "Install requirements"

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/appServicePython'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # (no value); this input is optional
- publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
  displayName: 'Upload package'
  artifact: drop

jobs:
- deployment: DeploymentJob
pool:
  vmImage: ubuntu-latest
strategy:
  runOnce:
    deploy:
      steps:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
        displayName: 'Use Python version'

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ webAppName }}'
        inputs:
          azureSubscription: $(azureSubscriptionEndpoint)
          appName: $(webAppName)
          package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

          # The following parameter is specific to the Flask example code. You may
          # or may not need a startup command for your app.

          startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'